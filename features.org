* importmagic.el

This is an elisp package intended to use [[https://github.com/alecthomas/importmagic][importmagic]] to autoimport
missing symbols in Python without having to bother to go to the
beginning of the file to manually add the imports. I've tried it with
Elpy and it works ok.

This file is intended to *help the developing process*.

** [1/7] Work process

   1. [X] Write the Python EPC Server:
      * [X] Write a function that returns unimported symbols
      * [X] Write a function that returns candidates for a single
        symbol
      * [X] Write a function that returns where to put the new
        import. Actually we may or may not need this function, it
        really depends on how Python imports should be put in a buffer
   2. [ ] Write the actual =importmagic.el= file using EPC.
      * [ ] Write a function that starts the RPC server on buffer
        initialization.
      * [ ] Write a function that queries the server for the unresolved
        symbols to import and shows the candidates using
        =completing-read= or something along those lines. Do that for
        every candidate on each unimported symbol.
      * [ ] Write a function that actually inserts the suggested import
        in the buffer /without/ saving it
   3. [ ] Write a *good* README file.
   4. [ ] Test it and bind it to a key.
   5. [ ] Use it for profit.
   6. [ ] Use [[https://github.com/cask/cask][Cask]]. Make tests for the package and actually create a
      package
   7. [ ] Maybe submit it to MELPA.
